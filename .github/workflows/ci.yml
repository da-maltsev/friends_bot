name: CI


on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        uses: ./.github/actions/build

      - name: restore mypy cache
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-cache-${{ github.ref_name }}
          restore-keys: mypy-cache-master

      - name: lint
        run: make lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7.2.4-alpine
        ports:
          - 6379:6379


    steps:
      - uses: actions/checkout@v4

      - name: build
        uses: ./.github/actions/build

      - name: test
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: make test

  build-docker-image:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        uses: ./.github/actions/build

      - name: set up qemu
        uses: docker/setup-qemu-action@v2

      - name: set up buildx
        uses: docker/setup-buildx-action@v2

      - name: generate image identifier
        id: image
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository_owner }}

      - name: login to ghcr
        uses: docker/login-action@v2
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build tg bot image
        uses: docker/build-push-action@v3
        with:
          context: .
          target: base
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ghcr.io/${{ steps.image.outputs.lowercase }}/friends-bot:latest
            ghcr.io/${{ steps.image.outputs.lowercase }}/friends-bot:${{ github.sha }}

          build-args: |
            PYTHON_VERSION=${{ env.python-version }}
            RELEASE=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max